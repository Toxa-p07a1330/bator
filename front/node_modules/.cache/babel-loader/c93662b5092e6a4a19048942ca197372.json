{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\for_sell\\\\bator\\\\front\\\\src\\\\Workers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nlet Workers = () => {\n  _s();\n\n  const [data, setData] = useState({\n    isLoaded: false\n  });\n  let wayToApi = \"http://localhost:3001/select%20*%20from%20workers\";\n\n  if (!data.isLoaded) {\n    fetch(wayToApi).then(reposnse => {\n      reposnse.json().then(json => {\n        let newState = json;\n        console.log(json);\n        newState.isLoaded = true;\n        setData(newState);\n      });\n    }, reject => {\n      console.log(reject);\n    });\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041D\\u0430\\u0448\\u0438 \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.map(val => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {},\n            children: [val.fname, \" \", val.sname, \" \", val.tname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Workers, \"P/KZzgE67AzLEE6bvCAtqw7bk0o=\");\n\n_c = Workers;\nexport default Workers;\nlet styleOpen = {\n  display: \"block\",\n  color: \"white\"\n};\nlet styleClose = {\n  display: \"block\",\n  color: \"red\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Workers\");","map":{"version":3,"sources":["C:/Users/User/Desktop/for_sell/bator/front/src/Workers.js"],"names":["React","useState","Workers","data","setData","isLoaded","wayToApi","fetch","then","reposnse","json","newState","console","log","reject","map","val","fname","sname","tname","styleOpen","display","color","styleClose"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AACA,IAAIC,OAAO,GAAG,MAAI;AAAA;;AAEd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC;AAACI,IAAAA,QAAQ,EAAE;AAAX,GAAD,CAAhC;AACA,MAAIC,QAAQ,GAAG,mDAAf;;AACA,MAAI,CAACH,IAAI,CAACE,QAAV,EAAmB;AACfE,IAAAA,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CACKC,QAAD,IAAY;AACRA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBE,IAAD,IAAQ;AACzB,YAAIC,QAAQ,GAAGD,IAAf;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAC,QAAAA,QAAQ,CAACN,QAAT,GAAoB,IAApB;AACAD,QAAAA,OAAO,CAACO,QAAD,CAAP;AACH,OALD;AAMH,KARL,EASKG,MAAD,IAAU;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACH,KAXL;AAaH,GAdD,MAeK;AACD,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAEH;AAAA,kBACKX,IAAI,CAACY,GAAL,CAAUC,GAAD,IAAO;AACb,8BAAO;AAAK,YAAA,KAAK,EAAE,EAAZ;AAAA,uBACFA,GAAG,CAACC,KADF,OACUD,GAAG,CAACE,KADd,OACsBF,GAAG,CAACG,KAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAGH,SAJA;AADL;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAUH;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAhCD;;GAAIjB,O;;KAAAA,O;AAiCJ,eAAeA,OAAf;AAEA,IAAIkB,SAAS,GAAG;AACZC,EAAAA,OAAO,EAAC,OADI;AAEZC,EAAAA,KAAK,EAAC;AAFM,CAAhB;AAIA,IAAIC,UAAU,GAAG;AACbF,EAAAA,OAAO,EAAC,OADK;AAEbC,EAAAA,KAAK,EAAC;AAFO,CAAjB","sourcesContent":["import React, {useState} from 'react';\r\nlet Workers = ()=>{\r\n\r\n    const [data, setData] = useState({isLoaded: false});\r\n    let wayToApi = \"http://localhost:3001/select%20*%20from%20workers\";\r\n    if (!data.isLoaded){\r\n        fetch(wayToApi).then(\r\n            (reposnse)=>{\r\n                reposnse.json().then((json)=>{\r\n                    let newState = json;\r\n                    console.log(json)\r\n                    newState.isLoaded = true;\r\n                    setData(newState);\r\n                })\r\n            },\r\n            (reject)=>{\r\n                console.log(reject)\r\n            }\r\n        )\r\n    }\r\n    else {\r\n        return <div>\r\n            <h2>Наши сотрудники</h2>\r\n            <div>\r\n                {data.map((val)=>{\r\n                    return <div style={{}}>\r\n                        {val.fname} {val.sname} {val.tname}\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n    return <div>Loading</div>\r\n}\r\nexport default Workers;\r\n\r\nlet styleOpen = {\r\n    display:\"block\",\r\n    color:\"white\"\r\n}\r\nlet styleClose = {\r\n    display:\"block\",\r\n    color:\"red\"\r\n}\r\n"]},"metadata":{},"sourceType":"module"}