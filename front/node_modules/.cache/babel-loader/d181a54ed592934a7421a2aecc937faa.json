{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\for_sell\\\\bator\\\\front\\\\src\\\\Agreements.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MyContext } from \"./Context\";\n\nlet Agreemnets = () => {\n  _s();\n\n  const [data, setData] = useState({\n    isLoaded: false\n  });\n  let wayToApi = \"http://localhost:3001/select%20*%20from%20studagreement join students where students.id = studagreement.studentId\";\n\n  if (!data.isLoaded) {\n    fetch(wayToApi).then(reposnse => {\n      reposnse.json().then(json => {\n        let newState = json;\n        console.log(json);\n        newState.isLoaded = true;\n        setData(newState);\n      });\n    }, reject => {\n      console.log(reject);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  } else {\n    let localData = { ...data\n    };\n    delete localData.isLoaded;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: style,\n          children: \"\\u0424\\u0418\\u041E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: style,\n          children: \"\\u0414\\u0430\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), data.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: style,\n            children: value.fio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: style,\n            children: value.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(Agreemnets, \"P/KZzgE67AzLEE6bvCAtqw7bk0o=\");\n\n_c = Agreemnets;\nlet style = {\n  display: \"inline-block\",\n  width: \"15%\",\n  paddingTop: \"1%\"\n};\nexport default Agreemnets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Agreemnets\");","map":{"version":3,"sources":["C:/Users/User/Desktop/for_sell/bator/front/src/Agreements.js"],"names":["React","useState","MyContext","Agreemnets","data","setData","isLoaded","wayToApi","fetch","then","reposnse","json","newState","console","log","reject","localData","style","map","value","fio","date","display","width","paddingTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,WAAxB;;AACA,IAAIC,UAAU,GAAG,MAAI;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;AAACK,IAAAA,QAAQ,EAAE;AAAX,GAAD,CAAhC;AACA,MAAIC,QAAQ,GAAG,mHAAf;;AACA,MAAI,CAACH,IAAI,CAACE,QAAV,EAAmB;AACfE,IAAAA,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CACKC,QAAD,IAAY;AACRA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBE,IAAD,IAAQ;AACzB,YAAIC,QAAQ,GAAGD,IAAf;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAC,QAAAA,QAAQ,CAACN,QAAT,GAAoB,IAApB;AACAD,QAAAA,OAAO,CAACO,QAAD,CAAP;AACH,OALD;AAMH,KARL,EASKG,MAAD,IAAU;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACH,KAXL;AAaA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAfD,MAgBK;AACD,QAAIC,SAAS,GAAG,EAAC,GAAGZ;AAAJ,KAAhB;AACA,WAAOY,SAAS,CAACV,QAAjB;AACA,wBAAO;AAAA,8BACH;AAAA,gCACI;AAAK,UAAA,KAAK,EAAEW,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,KAAK,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,EAKFb,IAAI,CAACc,GAAL,CAAUC,KAAD,IAAS;AACf,4BAAO;AAAA,kCACH;AAAK,YAAA,KAAK,EAAEF,KAAZ;AAAA,sBAAoBE,KAAK,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADG,eAEH;AAAK,YAAA,KAAK,EAAEH,KAAZ;AAAA,sBAAoBE,KAAK,CAACE;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAFG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAIH,OALA,CALE;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAaH;AACJ,CApCD;;GAAIlB,U;;KAAAA,U;AAqCJ,IAAIc,KAAK,GAAG;AACRK,EAAAA,OAAO,EAAE,cADD;AAERC,EAAAA,KAAK,EAAE,KAFC;AAGRC,EAAAA,UAAU,EAAC;AAHH,CAAZ;AAMA,eAAerB,UAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport {MyContext} from \"./Context\";\r\nlet Agreemnets = ()=>{\r\n    const [data, setData] = useState({isLoaded: false});\r\n    let wayToApi = \"http://localhost:3001/select%20*%20from%20studagreement join students where students.id = studagreement.studentId\";\r\n    if (!data.isLoaded){\r\n        fetch(wayToApi).then(\r\n            (reposnse)=>{\r\n                reposnse.json().then((json)=>{\r\n                    let newState = json;\r\n                    console.log(json)\r\n                    newState.isLoaded = true;\r\n                    setData(newState);\r\n                })\r\n            },\r\n            (reject)=>{\r\n                console.log(reject)\r\n            }\r\n        )\r\n        return <div>Loading</div>\r\n    }\r\n    else {\r\n        let localData = {...data};\r\n        delete localData.isLoaded;\r\n        return <div>\r\n            <div>\r\n                <div style={style}>ФИО</div>\r\n                <div style={style}>Дата</div>\r\n            </div>\r\n            {data.map((value)=>{\r\n                return <div>\r\n                    <div style={style}>{value.fio}</div>\r\n                    <div style={style}>{value.date}</div>\r\n                </div>\r\n            })}\r\n        </div>\r\n\r\n    }\r\n}\r\nlet style = {\r\n    display: \"inline-block\",\r\n    width: \"15%\",\r\n    paddingTop:\"1%\"\r\n\r\n}\r\nexport default Agreemnets\r\n"]},"metadata":{},"sourceType":"module"}